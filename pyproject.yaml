[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aegis-security-copilot"
version = "1.0.0"
description = "Next-Generation AI-Powered Security Intelligence Platform"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Security AI Team | Harry Li", email = "hal212@ucsd.edu"},
]
maintainers = [
    {name = "Security AI Team | Harry Li", email = "hal212@ucsd.edu"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Security",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
    "Environment :: GPU :: NVIDIA CUDA :: 12.4",
]
keywords = [
    "security", "ai", "computer-vision", "surveillance", 
    "threat-detection", "object-detection", "video-analysis",
    "google-adk", "pytorch", "transformers", "yolo"
]
requires-python = ">=3.8"
dependencies = [
    # Google ADK Core
    "google-adk",
    
    # Computer Vision & AI Models
    "ultralytics>=8.3.0",
    "opencv-python>=4.8.0",
    "Pillow>=10.0.0",
    "torch>=2.3.1",
    "torchvision>=0.18.0",
    "torchaudio>=2.3.0",
    "transformers==4.51.1",
    "tokenizers==0.21.1",
    "accelerate==1.7.0",
    "safetensors==0.5.0",
    
    # Vision Models & Tools
    "supervision>=0.25.0",
    "numpy>=1.24.0",
    "einops>=0.8.0",
    "flash-attn>=2.7.0",
    
    # Audio Processing
    "pydub>=0.25.0",
    
    # Web Framework & APIs
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "python-jose>=3.3.0",
    "websockets>=14.0.0",
    "aiofiles",
    "requests>=2.32.0",
    
    # Data Processing
    "pandas>=2.0.0",
    "PyYAML>=6.0.0",
    "python-dotenv>=1.0.0",
    "psutil>=5.9.0",
    
    # Utilities
    "tqdm>=4.65.0",
    "termcolor>=2.3.0",
    "packaging>=23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
gpu = [
    "nvidia-cublas-cu12>=12.1.0",
    "nvidia-cuda-cupti-cu12>=12.1.0",
    "nvidia-cuda-nvrtc-cu12>=12.1.0",
    "nvidia-cuda-runtime-cu12>=12.1.0",
    "nvidia-cudnn-cu12>=8.9.0",
    "nvidia-cufft-cu12>=11.0.0",
    "nvidia-curand-cu12>=10.3.0",
    "nvidia-cusolver-cu12>=11.4.0",
    "nvidia-cusparse-cu12>=12.1.0",
    "nvidia-nccl-cu12>=2.20.0",
    "nvidia-nvjitlink-cu12>=12.1.0",
    "nvidia-nvtx-cu12>=12.1.0",
    "triton>=2.3.0",
    "bitsandbytes>=0.45.0",
]
vision = [
    "segment_anything @ git+https://github.com/facebookresearch/segment-anything.git@dca509fe793f601edb92606367a655c15ac00fdf",
]
all = [
    "aegis-security-copilot[dev,gpu,vision]"
]

[project.urls]
Homepage = "https://devpost.com/software/aegis-security-agent?ref_content=user-portfolio&ref_feature=in_progress"
Repository = "https://github.com/haoyangli16/Aegis-Security-Agent.git"
"Bug Tracker" = "https://github.com/haoyangli16/Aegis-Security-Agent/issues"
Changelog = "https://github.com/haoyangli16/Aegis-Security-Agent/blob/main/CHANGELOG.md"

[project.scripts]
aegis-agent = "run_agent.py"
aegis-server = "aegis/adk_server.py"
aegis-setup = "setup_environment.sh"

[project.entry-points."aegis.tools"]
object_detection = "aegis.tools.object_detection_tool:ObjectDetectionTool"
vlm_analysis = "aegis.tools.vlm_analysis_tool:VLMAnalysisTool"
security_analysis = "aegis.tools.security_analysis_tool:SecurityAnalysisTool"
camera_control = "aegis.tools.camera_control_tool:CameraControlTool"
incident_logging = "aegis.tools.incident_logging_tool:IncidentLoggingTool"
speech_to_text = "aegis.tools.speech_to_text_tool:SpeechToTextTool"

[tool.setuptools]
platforms = ["linux"]

[tool.setuptools.packages.find]
where = ["."]
include = ["aegis*", "viclab*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
aegis = [
    "config/*.py",
    "static/**/*",
    "checkpoints/*.pth",
    "checkpoints/*.pt",
]
viclab = [
    "image/checkpoints/*.pth",
    "image/checkpoints/*.pt",
    "video/samples/*",
    "voice/sample/*",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | checkpoints
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aegis", "viclab"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    "checkpoints",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["aegis", "viclab"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
] 